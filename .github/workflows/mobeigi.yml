name: Build, Test and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_app:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Enable Corepack
      working-directory: ./app
      run: corepack enable

    - name: Get yarn cache directory path
      working-directory: ./app
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Cache yarn dependencies
      uses: actions/cache@v4
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install
      working-directory: ./app
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Lint
      working-directory: ./app
      run: yarn lint
    
    # TODO: Wire up tests
    # - name: Test
    #   working-directory: ./app
    #   run: yarn test
    # TODO: How to build without DB
    # - name: Build
    #   working-directory: ./app
    #   run: yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: [build_test_app]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy App (via webhook)
        uses: distributhor/workflow-webhook@v3
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
          data: '{
            "DOCKER_COMPOSE_PROJECT_NAME": "${{ vars.DOCKER_COMPOSE_PROJECT_NAME }}",
            "GIT_REPOSITORY_NAME": "${{ vars.GIT_REPOSITORY_NAME }}"
          }'
